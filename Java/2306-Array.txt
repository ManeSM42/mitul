Arrays
--------------------------------------------------------------------
An array is collection of homogeneous (same type and same size) elements.
In Java, array is an object (i.e elements are stored into the heap).


Declaration:


   datatype[] varName1,varName2;  //all two variables are array type

   datatype varName1[], varName2;  //varName1 is an array but
				     varName2 is int variable.

   Note that the subscript [] must be empty to declare array variable.



Create an array
----------------

  The "new" keyword is used to create an array.

  syntax:

      arrayVar = new datatype[size];

     Or

      datatype arrayVar[] = new datatype[size];

    Or

      datatype []arrayVar = new datatype[size];


Note: Size of array must be positive integer


Example:

class Test
{
  public static void main(String []args)
   {
       int []nos;  //declare

       nos = new int[3]; //create three int array

       //Each created array has "length" property which returns
       //count of elements

       System.out.println(nos.length); // 3

       //print/traverse/iterate array elements

       for(int i=0;i<nos.length;i++)
         {
           System.out.println( nos[i] );
          }
     }
}

You can use array index to set/get value of an element. The lower bound (limit) of array is 0 and upper bound is length-1.

Example : Code in main method

  int []nos = new int[4];

  nos[0] = 70;
  nos[3] = 90; 
  nos[1] = 40;
  nos[2] = nos[0] * 2;

  //print individual element
  System.out.println(nos[0]); // 70
  System.out.println(nos[2]); // 140

  //print all elements
  for(int i=0;i<nos.length;i++)
  {
    System.out.println( nos[i] );
   }

Example: Code in main() method

  String cities[] = new String[4];

  cities[0] = "Mehsana";
  cities[1] = "Patan";
  cities[2] = "Rajkot";
  cities[3] = "Visnagar";

  for(int i=0;i<cities.length;i++)
   {
     System.out.println( cities[i] );
    }

The for in loop
------------------------------------------
To traverse (or iterate) arrays, Java has a special loop called "for in" or "for each" loop.

  Sytnax:

     for(Datatype var : arrayVar)
      {
          //statement
       }

   This loop read one after one value from "arrayVar" and copy it to    "var" till arrayVar has elements.



So,

  for(String city: cities)
   {
       System.out.println(city);
    }

is equivalent to 

   for(int i=0;i<cities.length;i++)
   {
      String city = cities[i];
       System.out.println(city);
    }



Nested arrays Or Multi-dimensional array
====================================================================

An array can represent the reference of another array is known as "Nested" or "Jagged" or "Multi-dim" array.


   For example,

        int []no = new int[3];   This array represent three "int"                                  variables.

 
        int [][]no = new int[3][2]; This array represent three arrays
				    and each array represent two "int"	
				    variables.


  Arrays having single subscript is called "one/single dimensional".
  Arrays having two subscript is called "two dim"
  Arrays having three subscript is called "three dim" and so on.	
				
                  0      1
     no         
    |  0 | <--- |  10  |  20  |
    |----|
    |  1 | <--- |  30   | 90   |
    |----|
    |  2 | <--- |   70   | 50  |
    |----|


Example:

class Test
{
   public static void main(String []args)
   {
      int no[][] = new int[3][2];
      
      no[0][0] = 10;  no[0][1] = 20;
      no[1][0] = 30;  no[1][1] = 90;
      no[2][0] = 70;  no[2][1] = 50;

      System.out.println( no[2][0] ); // 70
      System.out.println( no[1][1] ); // 90

      //Print elements like a matrix

      for(int i=0;i<no.length;i++)
       {
         for(int j=0;j<no[i].length;j++)
           {
             System.out.print( no[i][j] + "  ");
            }
           System.out.println(); //newline
        }  

      for(int []a: no)
       {
          for(int b:a)
          {
             System.out.print(b + " " );
           }
           System.out.println();
       }
   }
}


Another way to create an array -- Array Initialization
-------------------------------------------------------

  syntax:  datatype []var = {value1,value2,...};

   
Code in main:

  int nos[] = { 10, 20, 30,40};
  String months[] = {"Jan","Feb","Mar","Apr"};
  int mat[][] =
   {
     {1,2,3},
     {3,0,3},
     {2,1,0}
    };

  for(int n: nos) {
        System.out.println(n);
  }
 
  for(String name: months) {
        System.out.println(name);
  }

  for(int []ar: mat){
    for(int n: ar){
        System.out.print(n + "  ");
     }
    System.out.println();
   }

  
Array of Objects
---------------------------------------------------------------------

To create a collection of objects of a particular class, we have to declare an array of that particular class.

For example,

  To represent 5 student data (roll,name, etc.),

     //declare
     Student []students;

    //create five references to hold five objects

    students = new Student[5]; //5 ref vars are created with null value

    //and create five student objects and store object reference
    //to array index.

    students[0] = new Student(10,"Raj");
    students[1] = new Student(30,"Mohan");
    students[2] = new Student();
    students[4] = new Student(80,"Manish");

    //print students
    for(Student s: students) {
       if( s!=null ) {
            System.out.println(s.getRoll() + " " + s.getName());
       }
     }


Example:

class Student {
    private int roll;
    private String name;
    ........
}
class Test {
   public static void main(String []args){
      //create 
      Student []students;
      .....
      .....
    }
}


Example: Array of Point class object -- Polygon
Example: Array of Product class object


class Product {
   private String name;
   private double rate;
   private double qty;
 
   public Product() { }
   public Product(String mName,double mRate, double mQty) {}
 
}

Code in main:

 
  Product []products = new Product[3];
  products[0] = new Product("Pencil",10,4);
  products[1] = new Product();
  products[2] = new Product();

  products[1].setName("Pen");
  products[1].setRate(10.10);
  
  products[2].setProduct("Fullscape notebook",10,20);

    